

import random
import cmath

def affirmation_generator():
    # Generate a random value between 1 and 5
    random_value = random.randint(1, 5)
    
    # Use a dictionary to map each random value to a specific affirmation
    affirmations = {
        1: "You are capable of amazing things.",
        2: "You radiate positivity and confidence.",
        3: "Success is inevitable for you.",
        4: "Every challenge is an opportunity for growth.",
        5: "Your potential is limitless."
    }

    # Retrieve the corresponding affirmation for the random value
    affirmation = affirmations.get(random_value, "Invalid random value")
    
    # Print the selected affirmation
    print("Affirmation:", affirmation)

def quadratic_equation_intercept_finder(a, b, c):
    # Calculate the discriminant
    discriminant = b**2 - 4*a*c

    # Check if there are real intercepts
    if discriminant < 0:
        return "No real intercepts exist."

    # Calculate the x-intercepts using the quadratic formula
    first_x_intercept = (-b + cmath.sqrt(discriminant)) / (2*a)
    second_x_intercept = (-b - cmath.sqrt(discriminant)) / (2*a)

    # Return the x-intercepts as a tuple
    return first_x_intercept, second_x_intercept

# Example usage:
print("----- Affirmation Generator -----")
affirmation_generator()

print("\n----- Quadratic Equation Intercept Finder -----")
# Example usage for quadratic equation with coefficients a=1, b=-3, c=2
a = 1
b = -3
c = 2
intercepts = quadratic_equation_intercept_finder(a, b, c)
print("Intercepts:", intercepts)
